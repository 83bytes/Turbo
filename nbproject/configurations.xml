<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="94">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <logicalFolder name="HeaderFiles"
                   displayName="Header Files"
                   projectFiles="true">
      <logicalFolder name="impl" displayName="impl" projectFiles="true">
        <itemPath>impl/CPP_META_MACROS.hpp</itemPath>
        <itemPath>impl/demangle.hpp</itemPath>
        <itemPath>function_alias_decl.hpp</itemPath>
      </logicalFolder>
      <logicalFolder name="utils" displayName="utils" projectFiles="true">
        <itemPath>utils/assert.hpp</itemPath>
        <itemPath>utils/debugging_utilities.hpp</itemPath>
        <itemPath>enable_if.hpp</itemPath>
        <itemPath>static_if.hpp</itemPath>
        <itemPath>to_string.hpp</itemPath>
        <itemPath>utility.hpp</itemPath>
      </logicalFolder>
      <itemPath>algebra.hpp</itemPath>
      <itemPath>algorithm.hpp</itemPath>
      <itemPath>bind.hpp</itemPath>
      <itemPath>chameleon.hpp</itemPath>
      <itemPath>control_structures.hpp</itemPath>
      <itemPath>curry.hpp</itemPath>
      <itemPath>decimal.hpp</itemPath>
      <itemPath>eval.hpp</itemPath>
      <itemPath>fixed_point.hpp</itemPath>
      <itemPath>float.hpp</itemPath>
      <itemPath>function.hpp</itemPath>
      <itemPath>high_order_functions.hpp</itemPath>
      <itemPath>illformed_call.hpp</itemPath>
      <itemPath>integral.hpp</itemPath>
      <itemPath>integral_iterators.hpp</itemPath>
      <itemPath>integral_lists.hpp</itemPath>
      <itemPath>iterator.hpp</itemPath>
      <itemPath>lambda.hpp</itemPath>
      <itemPath>lazy.hpp</itemPath>
      <itemPath>let_expressions.hpp</itemPath>
      <itemPath>list.hpp</itemPath>
      <itemPath>list_algorithms.hpp</itemPath>
      <itemPath>math.hpp</itemPath>
      <itemPath>overloaded_function.hpp</itemPath>
      <itemPath>pipelined_function.hpp</itemPath>
      <itemPath>placeholder_lists.hpp</itemPath>
      <itemPath>placeholders.hpp</itemPath>
      <itemPath>polymorphic_container.hpp</itemPath>
      <itemPath>raii_actions.hpp</itemPath>
      <itemPath>runtime_chameleon.hpp</itemPath>
      <itemPath>runtime_placeholders.hpp</itemPath>
      <itemPath>std_function.hpp</itemPath>
      <itemPath>tagging.hpp</itemPath>
      <itemPath>to_runtime.hpp</itemPath>
      <itemPath>type_traits.hpp</itemPath>
      <itemPath>unconditional_false.hpp</itemPath>
      <itemPath>warning.hpp</itemPath>
    </logicalFolder>
    <logicalFolder name="ResourceFiles"
                   displayName="Resource Files"
                   projectFiles="true">
    </logicalFolder>
    <logicalFolder name="SourceFiles"
                   displayName="Source Files"
                   projectFiles="true">
      <itemPath>main.cpp</itemPath>
    </logicalFolder>
    <logicalFolder name="TestFiles"
                   displayName="Test Files"
                   projectFiles="false"
                   kind="TEST_LOGICAL_FOLDER">
    </logicalFolder>
    <logicalFolder name="ExternalFiles"
                   displayName="Important Files"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>Makefile</itemPath>
    </logicalFolder>
    <logicalFolder name="TestFiles"
                   displayName="Test Files"
                   projectFiles="false"
                   kind="TEST_LOGICAL_FOLDER">
    </logicalFolder>
    <logicalFolder name="ExternalFiles"
                   displayName="Important Files"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>Makefile</itemPath>
    </logicalFolder>
  </logicalFolder>
  <sourceRootList>
    <Elem>.</Elem>
    <Elem>.</Elem>
  </sourceRootList>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Debug" type="1">
      <toolsSet>
        <compilerSet>default</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <ccTool>
          <standard>8</standard>
          <commandLine>-stdlib=libc++ -lc++abi -ftemplate-backtrace-limit=0 -ftemplate-depth=10000000</commandLine>
        </ccTool>
      </compileType>
      <item path="algebra.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="algorithm.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="bind.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="chameleon.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="control_structures.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="curry.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="decimal.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="enable_if.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="eval.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="fixed_point.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="float.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="function_alias_decl.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="high_order_functions.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="illformed_call.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="impl/CPP_META_MACROS.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="impl/demangle.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="integral.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="integral_iterators.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="integral_lists.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="iterator.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="lambda.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="lazy.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="let_expressions.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="list.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="list_algorithms.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="main.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="math.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="overloaded_function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="pipelined_function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="placeholder_lists.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="placeholders.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="polymorphic_container.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="raii_actions.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="runtime_chameleon.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="runtime_placeholders.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="static_if.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="std_function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="tagging.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="to_runtime.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="to_string.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="type_traits.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="unconditional_false.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="utility.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="utils/assert.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="utils/debugging_utilities.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="warning.hpp" ex="false" tool="3" flavor2="0">
      </item>
    </conf>
    <conf name="Release" type="1">
      <toolsSet>
        <compilerSet>default</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <standard>8</standard>
          <commandLine>-stdlib=libc++ -lc++abi -ftemplate-backtrace-limit=0</commandLine>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
        </asmTool>
      </compileType>
      <item path="algebra.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="algorithm.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="bind.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="chameleon.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="control_structures.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="curry.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="decimal.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="enable_if.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="eval.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="fixed_point.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="float.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="function_alias_decl.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="high_order_functions.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="illformed_call.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="impl/CPP_META_MACROS.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="impl/demangle.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="integral.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="integral_iterators.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="integral_lists.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="iterator.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="lambda.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="lazy.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="let_expressions.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="list.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="list_algorithms.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="main.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="math.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="overloaded_function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="pipelined_function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="placeholder_lists.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="placeholders.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="polymorphic_container.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="raii_actions.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="runtime_chameleon.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="runtime_placeholders.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="static_if.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="std_function.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="tagging.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="to_runtime.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="to_string.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="type_traits.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="unconditional_false.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="utility.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="utils/assert.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="utils/debugging_utilities.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="warning.hpp" ex="false" tool="3" flavor2="0">
      </item>
    </conf>
  </confs>
</configurationDescriptor>
